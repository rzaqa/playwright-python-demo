name: Playwright Component Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # manual trigger

env:
  BASE_URL: https://saleor-dashboard-228462058101.europe-central2.run.app/
  GRAPHQL_URL: https://saleor-228462058101.europe-central2.run.app/graphql/

jobs:
  precheck:
    name: 🔍 Backend Pre-Check
    runs-on: ubuntu-latest

    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: 🧰 Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: ✅ Run backend pre-check
        run: |
          source .venv/bin/activate
          pytest utils/precheck.py::test_verify_backend_alive -v

  component-tests:
    name: 🧪 Component UI Tests
    runs-on: ubuntu-latest
    needs: precheck        # ✅ run only if precheck succeeded

    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: 🧰 Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt
          playwright install --with-deps chromium

      - name: 🧩 Run Playwright component tests
        run: |
          source .venv/bin/activate
          pytest tests/ui/login/test_login_page_elements.py -v --disable-warnings --alluredir=allure-results

      - name: 📊 Upload Allure results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

  publish-report:
    name: 📈 Publish Allure Report
    runs-on: ubuntu-latest
    needs: component-tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results
      - name: Generate Allure HTML
        run: |
          npm install -g allure-commandline --save-dev
          allure generate allure-results --clean -o allure-report
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report